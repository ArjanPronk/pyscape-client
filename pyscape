#!/usr/bin/python3

import sys
import json
import csv
from src.pyscape import Pyscape

def link_query(pys, url, scope = Pyscape.L_PTP):
    data = []

    # API documentation says 50 links per request is optimal
    offset = 0
    step = 50
    
    # Limited to 100,000 links total
    for i in range(int(100000 / step)):
        call_data = pys.links(url, scope, offset, step)
        if call_data:
            # If data was received...
            data.extend(call_data)
        else:
            # If call() failed to return data, stop collecting
            break   
        offset = offset + step

    return data
    
def bulk_metrics(pys, urls):
    data = []
    for url in urls:
        data.extend(pys.url_metrics(url))

    return data

def top_pages_query(pys, url):
    data = []
        
    # API documentation says that 50 links per
    # request is optimal
    offset = 0
    step = 50

    # Limited to 10,000 URLs
    for i in range(int(10000 / step)):
        call_data = pys.top_pages(url, offset, step)
        if call_data:
            # If data was received...
            data.extend(call_data)
        else:
            # If call() failed to return data, stop collecting
            break   
        offset = offset + step

    return data

def help():
    print("Placeholder.")

def main():
    method = sys.argv[1] if len(sys.argv) > 1 else None
    option1 = sys.argv[2] if len(sys.argv) > 2 else None
    option2 = sys.argv[3] if len(sys.argv) > 3 else None

    if not method:
        help()
        sys.exit()

    if not option1:
        help()
        exit('Invalid URL.')

    with open('keys.json', 'r') as k:
        key_string = json.load(k)

    pys = Pyscape(key_string['access-id'], key_string['secret-key'])
    
    if method == 'url-metrics':
        url = option1
        output = pys.url_metrics(url)
    elif method == 'bulk-metrics':
        urls = []
        with open(option1, 'r') as j:
            for line in j:
                urls.append(line.rstrip())
        output = bulk_metrics(pys, urls)
    elif method == 'links':
        url = option1
        if not option2:
            help()
            sys.exit()
        elif option2 == 'ptp':
            output = link_query(pys, url, Pyscape.L_PTP)
        elif option2 == 'ptd':
            output = link_query(pys, url, Pyscape.L_PTD)
        else:
            help()
            sys.exit()
    elif method == 'anchor-text':
        url = option1
        if not option2:
            help()
            sys.exit()
        elif option2 == 'ptp':
            output = pys.anchor_text(url, Pyscape.A_PTP)
        elif option2 == 'ptd':
            output = pys.anchor_text(url, Pyscape.A_PTD)
        else:
            help()
            sys.exit()
    elif method == 'top-pages':
        url = option1
        output = top_pages_query(pys, url)

    print(output)

if __name__ == '__main__':
    sys.exit(main())
