#!/usr/bin/python3

import sys
import json
import csv
from src.pyscape import Pyscape
from src.queries import *

# IDs of the default cases
M_DOM_COLS = 'u_d'
M_SUB_COLS = 'u_s'
M_PAG_COLS = 'u_p'
T_COLS = 't'
A_PTP_COLS = 'apu'

def load_cols(preset):
    with open('./data/defaults.json', 'r') as f:
        data = json.load(f)

    with open('./data/bitflags.json', 'r') as g:
        index = json.load(g)

    cols = 0

    for i in data[preset]:
        # The bitflag.json generating script is wrapping numbers
        # in quotation marks
        cols = cols | int(index[i]['flag'])

    return cols

def help():
    print("Placeholder.")

def main():
    method = sys.argv[1] if len(sys.argv) > 1 else None
    option1 = sys.argv[2] if len(sys.argv) > 2 else None
    option2 = sys.argv[3] if len(sys.argv) > 3 else None

    with open('keys.json', 'r') as k:
        key_string = json.load(k)

    pys = Pyscape(key_string['access-id'], key_string['secret-key'])
    
    if method == 'url-metrics':
        url = option1
        cols = load_cols('u_d')
        output = u_query(pys, url, cols)
    elif method == 'bulk-metrics':
        urls = []
        with open(option1, 'r') as j:
            for line in j:
                urls.append(line.rstrip())
        cols = load_cols('u_p')
        output = bulk_metrics(pys, urls, cols)
    elif method == 'links':
        url = option1
        target_cols = load_cols('ptp_t')
        source_cols = load_cols('ptp_s')
        link_cols = load_cols('ptp_l')
        output = l_query(pys, url, target_cols,
                         source_cols, link_cols, Pyscape.L_PTD)
    elif method == 'anchor-text':
        url = option1
        if not option2:
            help()
            sys.exit()
        elif option2 == 'ptp':
            cols = load_cols(A_PTP_COLS)
            output = a_query(pys, url, cols, Pyscape.A_PTP)
        else:
            help()
            sys.exit()
    elif method == 'top-pages':
        url = option1
        cols = load_cols(T_COLS)
        output = t_query(pys, url, cols)
    else:
        output = load_cols('u_s')

    print(output)

if __name__ == '__main__':
    sys.exit(main())
